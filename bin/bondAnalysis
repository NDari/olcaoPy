#!/usr/bin/env python

import olcaoPy.control as ctrl
import optparse
import os
import sys

# create a parser for the argv[]
parser = optparse.OptionParser()

parser.add_option('-l', '--bondlengths',
                  action='store_true',
                  dest='bl',
                  default=False,
                  help='''
The option to print the bonds and their lengths of all the atoms in the system 
in "analysis.bl". Default is not to print this file.''')

parser.add_option('-i', '--input',
                  action='store',
                  dest='iFile',
                  default="olcao.skl",
                  help='''
The input file. Default is "olcao.skl".''')

parser.add_option('-f', '--bondingfactor',
                  action='store',
                  dest='bf',
                  default='1.1',
                  type='float',
                  help='''
The bonding factor. Two atoms are considered bonded if the sum of their 
covalent radii times the bonding factor is bigger or equal to their 
distance from one another. Default is 1.1.''')

parser.add_option('-c', '--coordination',
                  action='store_true',
                  dest='coord',
                  default=False,
                  help='''
The option to print the coordination of atoms to the "analysis.co" file. 
The default is to not print this file.''')

# parse the arguments
options, args = parser.parse_args()

# check that we will not overwrite existing files.
if options.bl:
    if os.path.isfile('analysis.bl'):
        sys.exit('File "analysis.bl" already exists! Aborting the whole script')
if options.coord:
    if os.path.isfile('analysis.co'):
        sys.exit('File "analysis.co" already exists! Aborting the whole script')

# read the input file
s = ctrl.Structure(options.iFile)

if options.bl or options.coord:
    r = s.bondingList(bf = options.bf)

# carry out the requested action(s)
if options.bl:
    string = ""
    for i in range(len(r)):
        string += str(i+1)
        string += "\n"
        keys = sorted(r[i].keys())
        vals = sorted(r[i].values())
        for j in range(len(keys)):
            string += str(keys[j]+1)
            string += " "
            string += str(vals[j])
            string += " "
        string += "\n"
    f = open('analysis.bl', 'w')
    f.write(string)
    f.close()

if options.coord:
    c = s.coordination(bondingList = r)
    string = ""
    for i in range(len(c)):
        string += "Atom: "
        string += str(i+1)
        string += "  Coordination: "
        string += str(c[i])
        string += "\n"
    f = open('analysis.co', 'w')
    f.write(string)
    f.close()

